# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Bootstrap template used to bootstrap a spoke for ServiceCatalog-Puppet
  {"version": "{{ VERSION }}", "framework": "servicecatalog-puppet", "role": "bootstrap-spoke"}

Parameters:
  PuppetAccountId:
    Type: String
    MinLength: 12
    MaxLength: 12
  PermissionBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  PuppetDeployInSpokeRolePermissionBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetDeployInSpokeRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  DeployEnvironmentComputeType:
    Type: String
    Description: The AWS CodeBuild Environment Compute Type
    Default: BUILD_GENERAL1_SMALL
  Version:
    Type: String
    Default: "{{ VERSION }}"
  PuppetRoleName:
    Type: String
    Default: PuppetRole
  PuppetRolePath:
    Type: String
    Default: /servicecatalog-puppet/

Conditions:
  NotRunningInPuppetAccount:
    !Not [!Equals [!Ref PuppetAccountId, !Ref "AWS::AccountId"]]

Resources:
  Param:
    Type: AWS::SSM::Parameter
    Properties:
      Name: service-catalog-puppet-spoke-version
      Type: String
      Value: !Ref Version

  PuppetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref PuppetRoleName
      Path: !Ref PuppetRolePath
      PermissionsBoundary: !Ref PermissionBoundary
      Policies:
        - PolicyName: "acceptShares"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: servicecatalog:AcceptPortfolioShare
                Resource: !Sub "arn:${AWS::Partition}:catalog:*:${AWS::AccountId}:portfolio/*"
              - Effect: "Allow"
                Action: servicecatalog:AssociatePrincipalWithPortfolio
                Resource: !Sub "arn:${AWS::Partition}:catalog:*:${AWS::AccountId}:portfolio/*"
              - Effect: "Allow"
                Action: iam:GetRole
                Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role${PuppetRolePath}${PuppetRoleName}"
              - Effect: "Allow"
                Action: servicecatalog:SearchProductsAsAdmin
                Resource: !Sub "arn:${AWS::Partition}:servicecatalog:*:${AWS::AccountId}:*/*"
              - Effect: "Allow"
                Action: servicecatalog:SearchProductsAsAdmin
                Resource: !Sub "arn:${AWS::Partition}:catalog:*:${AWS::AccountId}:portfolio/*"
              - Effect: "Allow"
                Action: servicecatalog:ListAcceptedPortfolioShares
                Resource: !Sub "arn:${AWS::Partition}:servicecatalog:*:${AWS::AccountId}:*/*"
              - Effect: "Allow"
                Action: servicecatalog:ListProvisioningArtifacts
                Resource: !Sub "arn:${AWS::Partition}:catalog:*:${AWS::AccountId}:product/*"
              - Effect: "Allow"
                Action: servicecatalog:ListPortfolios
                Resource: !Sub "arn:${AWS::Partition}:catalog:*:${AWS::AccountId}:product/*"
              - Effect: "Allow"
                Action: sns:Publish
                Resource: !Sub "arn:${AWS::Partition}:sns:*:${PuppetAccountId}:servicecatalog-puppet-cloudformation-regional-events"
        - PolicyName: "AllowAccessToSCTemplates"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: s3:GetObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::cf-templates-*"
                  - !Sub "arn:${AWS::Partition}:s3:::cf-templates-*/*"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${PuppetAccountId}:root"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  DeployInSpokeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PuppetDeployInSpokeRole
      PermissionsBoundary: !Ref PuppetDeployInSpokeRolePermissionBoundary
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  DeployInSpokeProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-deploy-in-spoke
      Description: "runs puppet in the spoke account"
      ServiceRole: !GetAtt DeployInSpokeRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: !Ref DeployEnvironmentComputeType
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: VERSION
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: MANIFEST_URL
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: NUM_WORKERS
            Type: PLAINTEXT
            Value: "10"

          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: HOME_REGION
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: REGIONS
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: SHOULD_COLLECT_CLOUDFORMATION_EVENTS
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: SHOULD_FORWARD_EVENTS_TO_EVENTBRIDGE
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: SHOULD_FORWARD_FAILURES_TO_OPSCENTER
            Type: PLAINTEXT
            Value: "CHANGE_ME"

          - Name: PARTITION
            Type: PLAINTEXT
            Value: !Ref AWS::Partition
          - Name: PUPPET_ROLE_NAME
            Type: PLAINTEXT
            Value: !Ref PuppetRoleName
          - Name: PUPPET_ROLE_PATH
            Type: PLAINTEXT
            Value: !Ref PuppetRolePath

      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.9
              commands:
                - echo $VERSION
                - bash -c "if [[ $VERSION =~ 'http'  ]]; then pip install $VERSION ; else pip install aws-service-catalog-puppet==$VERSION; fi"


            build:
              commands:
                - curl $MANIFEST_URL > manifest-expanded.yaml
                - >
                  servicecatalog-puppet --info deploy \
                      --execution-mode spoke \
                      --puppet-account-id $PUPPET_ACCOUNT_ID \
                      --single-account $(aws sts get-caller-identity --query Account --output text) \
                      --home-region $HOME_REGION \
                      --regions $REGIONS \
                      --should-collect-cloudformation-events $SHOULD_COLLECT_CLOUDFORMATION_EVENTS \
                      --should-forward-events-to-eventbridge $SHOULD_FORWARD_EVENTS_TO_EVENTBRIDGE \
                      --should-forward-failures-to-opscenter $SHOULD_FORWARD_FAILURES_TO_OPSCENTER \
                      manifest-expanded.yaml
          artifacts:
            files:
              - results/*/*
              - output/*/*
            name: DeployInSpokeProject

      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

  SpokeEventBus:
    Type: AWS::Events::EventBus
    Condition: NotRunningInPuppetAccount
    Properties:
      Name: "servicecatalog-puppet-spoke-event-bus"

  SpokeEventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Condition: NotRunningInPuppetAccount
    Properties:
      Action: "events:PutEvents"
      Principal: !Ref AWS::AccountId
      StatementId: "allow-self"
      EventBusName: !Ref SpokeEventBus

  EventBridgeFromSpoke:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EventBridgeFromSpoke
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: EventBusActions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${PuppetAccountId}:event-bus/default"

  EventRule:
    Type: AWS::Events::Rule
    Condition: NotRunningInPuppetAccount
    Properties:
      EventBusName: !Ref SpokeEventBus
      Name: servicecatalog-puppet-forwarder
      EventPattern:
        source:
          - "servicecatalog-puppet"
      RoleArn: !GetAtt EventBridgeFromSpoke.Arn
      Targets:
        - Arn: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${PuppetAccountId}:event-bus/servicecatalog-puppet-event-bus"
          Id: servicecatalog-puppet-event-bus
          RoleArn: !GetAtt EventBridgeFromSpoke.Arn

Outputs:
  Version:
    Value: !GetAtt Param.Value

  PuppetRoleArn:
    Value: !GetAtt PuppetRole.Arn
