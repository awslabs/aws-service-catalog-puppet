# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Bootstrap template used to bring up the main ServiceCatalog-Puppet AWS CodePipeline with dependencies
  {"version": "{{ VERSION }}", "framework": "servicecatalog-puppet", "role": "bootstrap-master"}

Parameters:
  Version:
    Type: String
    Default: "{{ VERSION }}"
  OrgIamRoleArn:
    Type: String
    Default: "None"
  WithManualApprovals:
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
  PuppetCodePipelineRolePermissionBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetCodePipelineRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  SourceRolePermissionsBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the SourceRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  PuppetGenerateRolePermissionBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetGenerateRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  PuppetDeployRolePermissionBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetDeployRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  PuppetProvisioningRolePermissionsBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the PuppetProvisioningRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  CloudFormationDeployRolePermissionsBoundary:
    Type: String
    Description: IAM Permission Boundary to apply to the CloudFormationDeployRole
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  DeployEnvironmentComputeType:
    Type: String
    Description: The AWS CodeBuild Environment Compute Type
    Default: BUILD_GENERAL1_SMALL
  DeployNumWorkers:
    Type: Number
    Description: Number of workers that should be used when running a deploy
    Default: 10
  PuppetRoleName:
    Type: String
    Default: PuppetRole
  PuppetRolePath:
    Type: String
    Default: /servicecatalog-puppet/

Conditions:
  ShouldUseOrgs: !Not [!Equals [!Ref OrgIamRoleArn, None]]
  HasManualApprovals: !Equals [!Ref WithManualApprovals, 'Yes']

Resources:
  ManualApprovalsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /servicecatalog-puppet/manual-approvals
      Type: String
      Value: !Ref WithManualApprovals
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  Param:
    Type: AWS::SSM::Parameter
    Properties:
      Name: service-catalog-puppet-version
      Type: String
      Value: !Ref Version
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  PartitionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /servicecatalog-puppet/partition
      Type: String
      Value: !Ref AWS::Partition
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  PuppetRoleNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /servicecatalog-puppet/puppet-role/name
      Type: String
      Value: !Ref PuppetRoleName
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  PuppetRolePathParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /servicecatalog-puppet/puppet-role/path
      Type: String
      Value: !Ref PuppetRolePath
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  ShareAcceptFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: ShareAcceptFunctionRole
      Path: /servicecatalog-puppet/
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ServiceCatalogActions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/servicecatalog-puppet/PuppetRole

  ProvisioningRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PuppetProvisioningRole
      PermissionsBoundary: !Ref PuppetProvisioningRolePermissionsBoundary
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudFormationDeployRole
      PermissionsBoundary: !Ref CloudFormationDeployRolePermissionsBoundary
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PuppetCodePipelineRole
      PermissionsBoundary: !Ref PuppetCodePipelineRolePermissionBoundary
      Path: /servicecatalog-puppet/
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  SourceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PuppetSourceRole
      PermissionsBoundary: !Ref SourceRolePermissionsBoundary
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  {% if Source.Provider.lower() == 'codecommit' %}
  CodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Repo to store the servicecatalog puppet solution
      RepositoryName: {{ Source['Configuration']['RepositoryName'] }}
  {% endif %}

  DryRunNotificationTopic:
    Type: AWS::SNS::Topic
    Condition: HasManualApprovals
    Properties:
      DisplayName: service-catalog-puppet-dry-run-approvals
      TopicName: service-catalog-puppet-dry-run-approvals

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Sub "${AWS::StackName}-pipeline"
      ArtifactStores:
        {% for region in ALL_REGIONS %}
        - Region: {{ region }}
          ArtifactStore:
            Type: S3
            Location: !Sub "sc-puppet-pipeline-artifacts-${AWS::AccountId}-{{ region }}"
        {% endfor %}
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:

            {% if Source.Provider.lower() == 'codestarsourceconnection' %}

            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                BranchName: {{ Source.Configuration.BranchName }}
                ConnectionArn: {{ Source.Configuration.ConnectionArn }}
                FullRepositoryId: {{ Source.Configuration.FullRepositoryId }}
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'

            {% else %}

            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: {% if Source.Provider.lower() == 'codecommit' %}AWS{% else %}ThirdParty{% endif %}
                Version: 1
                Provider: {{ Source.Provider }}
              {% if Source.Provider.lower() == 'codecommit' %}
              Configuration:
                RepositoryName: !GetAtt CodeRepo.Name
                BranchName: {{ Source.Configuration.BranchName }}
                PollForSourceChanges: {{ Source.Configuration.PollForSourceChanges or 'true' }}
              {% endif %}
              {% if Source.Provider.lower() == 'github' %}
              Configuration:
                Owner: {{ Source['Configuration']['Owner'] }}
                Repo: {{ Source['Configuration']['Repo'] }}
                Branch: {{ Source['Configuration']['Branch'] }}
                OAuthToken: !Sub '{{ '{% raw %}{{{% endraw %}' }}resolve:secretsmanager:{{ Source['Configuration']['SecretsManagerSecret'] }}:SecretString:OAuthToken{{ '{% raw %}}}{% endraw %}' }}'
                PollForSourceChanges: {{ Source['Configuration']['PollForSourceChanges'] }}
              {% endif %}
              OutputArtifacts:
                - Name: Source
              RunOrder: 1
              {% if Source.Provider.lower() == 'codecommit' %}RoleArn: !GetAtt SourceRole.Arn{% endif %}

            {% endif %}

        - Name: Deploy
          Actions:
            - !If
              - HasManualApprovals
              - Name: DryRun
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref DryRunProject
                  PrimarySource: Source
                RunOrder: 1
                InputArtifacts:
                  - Name: Source
                OutputArtifacts:
                  - Name: DryRunProject
              - !Ref AWS::NoValue
            - !If
              - HasManualApprovals
              - Name: DryRunApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: 1
                  Provider: Manual
                Configuration:
                  NotificationArn: !Ref DryRunNotificationTopic
                  CustomData: Approve when you are happy with the dry run.
                RunOrder: 2
              - !Ref AWS::NoValue
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DeployProject
                PrimarySource: Source
              RunOrder: !If [HasManualApprovals, 3, 1]
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: DeployProject


  {% if Source.Provider.lower() == 'github' %}
  Webhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Sub '{{ '{% raw %}{{{% endraw %}' }}resolve:secretsmanager:{{ Source['Configuration']['SecretsManagerSecret'] }}:SecretString:SecretToken{{ '{% raw %}}}{% endraw %}' }}'
      Filters:
          - JsonPath: "$.ref"
            MatchEquals: "refs/heads/{{ Source.Configuration.Branch }}"
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      Name: !Sub "${AWS::StackName}-webhook"
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: 'true'
  {% endif %}

  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PuppetDeployRole
      PermissionsBoundary: !Ref PuppetDeployRolePermissionBoundary
      Path: /servicecatalog-puppet/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  NumWorkersSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /servicecatalog-puppet/deploy/num-workers
      Type: String
      Value: !Sub "${DeployNumWorkers}"
      Tags:
        "ServiceCatalogPuppet:Actor": "Framework"

  DeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-deploy
      Description: "deploys out the products to be deployed"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: !Ref DeployEnvironmentComputeType
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: NUM_WORKERS
            Type: PARAMETER_STORE
            Value: !Ref NumWorkersSSMParameter
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: PUPPET_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: PARTITION
            Type: PARAMETER_STORE
            Value: !Ref PartitionParameter
          - Name: PUPPET_ROLE_NAME
            Type: PARAMETER_STORE
            Value: !Ref PuppetRoleNameParameter
          - Name: PUPPET_ROLE_PATH
            Type: PARAMETER_STORE
            Value: !Ref PuppetRolePathParameter

      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - env
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - servicecatalog-puppet --info expand manifest.yaml
                - servicecatalog-puppet --info deploy --num-workers ${NUM_WORKERS} manifest-expanded.yaml
          artifacts:
            files:
              - manifest-expanded.yaml
              - results/*/*
              - output/*/*
              - exploded_results/*/*
              - tasks.log
            name: DeployProject

      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

  DryRunProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-dryrun
      Description: "dry run of the puppet run"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - servicecatalog-puppet --info dry-run manifest-expanded.yaml
          artifacts:
            files:
              - results/*/*
              - output/*/*
              - tasks.log
            name: DryRunProject

      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

  BootstrapASpokeProject:
    Type: AWS::CodeBuild::Project
    Description: |
      Wrapper project that:
        - installs aws-service-catalog-puppet
        - runs bootstrap-spoke-as
    Properties:
      Name: servicecatalog-puppet-bootstrap-spoke
      Description: "Bootstraps an account for use with ServiceCatalog-Puppet"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Sub "${AWS::AccountId}"
          - Name: ORGANIZATION_ACCOUNT_ACCESS_ROLE_ARN
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: ASSUMABLE_ROLE_IN_ROOT_ACCOUNT
            Type: PLAINTEXT
            Value: CHANGE_ME
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.x
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - servicecatalog-puppet bootstrap-spoke-as ${PUPPET_ACCOUNT_ID} ${ASSUMABLE_ROLE_IN_ROOT_ACCOUNT} ${ORGANIZATION_ACCOUNT_ACCESS_ROLE_ARN}
      TimeoutInMinutes: 30

  BootstrapProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-bootstrap-spokes-in-ou
      Description: "Bootstrap all the accounts in an OU"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: OU_OR_PATH
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: IAM_ROLE_NAME
            Type: PLAINTEXT
            Value: OrganizationAccountAccessRole
          - Name: IAM_ROLE_ARNS
            Type: PLAINTEXT
            Value: ''
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - servicecatalog-puppet bootstrap-spokes-in-ou $OU_OR_PATH $IAM_ROLE_NAME $IAM_ROLE_ARNS
          artifacts:
            files:
              - results/*/*
              - output/*/*
            name: BootstrapProject

      TimeoutInMinutes: 60
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"


  {% if Source.Provider.lower() == 'codecommit' %}
  SingleAccountRunProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-single-account-run
      Description: "Runs puppet for a single account - SINGLE_ACCOUNT_ID"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SINGLE_ACCOUNT_ID
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: GIT_REPO
            Type: PLAINTEXT
            Value: !GetAtt CodeRepo.CloneUrlHttp
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: PUPPET_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: PARTITION
            Type: PARAMETER_STORE
            Value: !Ref PartitionParameter
          - Name: PUPPET_ROLE_NAME
            Type: PARAMETER_STORE
            Value: !Ref PuppetRoleNameParameter
          - Name: PUPPET_ROLE_PATH
            Type: PARAMETER_STORE
            Value: !Ref PuppetRolePathParameter

      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - git clone --config 'credential.helper=!aws codecommit credential-helper $@' --config 'credential.UseHttpPath=true' ${CodeRepo.CloneUrlHttp}
                - servicecatalog-puppet --info expand ServiceCatalogPuppet/manifest.yaml --single-account $SINGLE_ACCOUNT_ID
                - servicecatalog-puppet --info deploy ServiceCatalogPuppet/manifest-expanded.yaml --single-account $SINGLE_ACCOUNT_ID
          artifacts:
            files:
              - ServiceCatalogPuppet/manifest.yaml
              - ServiceCatalogPuppet/manifest-expanded.yaml
              - output/*/*
              - results/*/*
              - tasks.log
            name: Deploy
      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"


  SingleAccountRunWithCallbackProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-single-account-run-with-callback
      Description: "Runs puppet for a single account - SINGLE_ACCOUNT_ID and then does a http put"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SINGLE_ACCOUNT_ID
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: GIT_REPO
            Type: PLAINTEXT
            Value: !GetAtt CodeRepo.CloneUrlHttp
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: PUPPET_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: CALLBACK_URL
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: PARTITION
            Type: PARAMETER_STORE
            Value: !Ref PartitionParameter
          - Name: PUPPET_ROLE_NAME
            Type: PARAMETER_STORE
            Value: !Ref PuppetRoleNameParameter
          - Name: PUPPET_ROLE_PATH
            Type: PARAMETER_STORE
            Value: !Ref PuppetRolePathParameter


      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - git clone --config 'credential.helper=!aws codecommit credential-helper $@' --config 'credential.UseHttpPath=true' ${CodeRepo.CloneUrlHttp}
                - servicecatalog-puppet --info expand ServiceCatalogPuppet/manifest.yaml --single-account $SINGLE_ACCOUNT_ID
                - servicecatalog-puppet --info deploy --on-complete-url $CALLBACK_URL ServiceCatalogPuppet/manifest-expanded.yaml --single-account $SINGLE_ACCOUNT_ID
          artifacts:
            files:
              - ServiceCatalogPuppet/manifest.yaml
              - ServiceCatalogPuppet/manifest-expanded.yaml
              - output/*/*
              - results/*/*
              - tasks.log
            name: Deploy
      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"
  {% endif %}

  {% if Source.Provider.lower() == 'github' %}
  SingleAccountRunProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-single-account-run
      Description: "Runs puppet for a single account - SINGLE_ACCOUNT_ID"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SINGLE_ACCOUNT_ID
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: OWNER
            Type: PLAINTEXT
            Value: {{ Source['Configuration']['Owner'] }}
          - Name: REPO
            Type: PLAINTEXT
            Value: {{ Source['Configuration']['Repo'] }}
          - Name: PAT
            Type: SECRETS_MANAGER
            Value: {{ Source['Configuration']['SecretsManagerSecret'] }}
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: PUPPET_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: PARTITION
            Type: PARAMETER_STORE
            Value: !Ref PartitionParameter
          - Name: PUPPET_ROLE_NAME
            Type: PARAMETER_STORE
            Value: !Ref PuppetRoleNameParameter
          - Name: PUPPET_ROLE_PATH
            Type: PARAMETER_STORE
            Value: !Ref PuppetRolePathParameter


      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - export URL=https://$(echo $PAT | jq -r .SecretToken)@github.com/$OWNER/$REPO.git
                - git clone $URL ServiceCatalogPuppet
                - cd ServiceCatalogPuppet && git checkout {{ Source['Configuration']['Branch'] }} && cd -
                - servicecatalog-puppet --info expand ServiceCatalogPuppet/manifest.yaml --single-account $SINGLE_ACCOUNT_ID
                - servicecatalog-puppet --info deploy ServiceCatalogPuppet/manifest-expanded.yaml --single-account $SINGLE_ACCOUNT_ID
          artifacts:
            files:
              - ServiceCatalogPuppet/manifest.yaml
              - ServiceCatalogPuppet/manifest-expanded.yaml
              - output/*/*
              - results/*/*
              - tasks.log
            name: Deploy
      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"


  SingleAccountRunWithCallbackProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: servicecatalog-puppet-single-account-run-with-callback
      Description: "Runs puppet for a single account - SINGLE_ACCOUNT_ID and then does a http put to the given url"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SINGLE_ACCOUNT_ID
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: OWNER
            Type: PLAINTEXT
            Value: {{ Source['Configuration']['Owner'] }}
          - Name: REPO
            Type: PLAINTEXT
            Value: {{ Source['Configuration']['Repo'] }}
          - Name: PAT
            Type: SECRETS_MANAGER
            Value: {{ Source['Configuration']['SecretsManagerSecret'] }}
          - Name: PUPPET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: PUPPET_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: CALLBACK_URL
            Type: PLAINTEXT
            Value: CHANGE_ME
          - Name: PARTITION
            Type: PARAMETER_STORE
            Value: !Ref PartitionParameter
          - Name: PUPPET_ROLE_NAME
            Type: PARAMETER_STORE
            Value: !Ref PuppetRoleNameParameter
          - Name: PUPPET_ROLE_PATH
            Type: PARAMETER_STORE
            Value: !Ref PuppetRolePathParameter

      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
          {% if 'http' in VERSION %}
                - pip install {{ VERSION }}
          {% else %}
                - pip install aws-service-catalog-puppet=={{ VERSION }}
          {% endif %}
            build:
              commands:
                - export URL=https://$(echo $PAT | jq -r .SecretToken)@github.com/$OWNER/$REPO.git
                - git clone $URL ServiceCatalogPuppet
                - cd ServiceCatalogPuppet && git checkout {{ Source['Configuration']['Branch'] }} && cd -
                - servicecatalog-puppet --info expand ServiceCatalogPuppet/manifest.yaml --single-account $SINGLE_ACCOUNT_ID
                - servicecatalog-puppet --info deploy --on-complete-url $CALLBACK_URL ServiceCatalogPuppet/manifest-expanded.yaml --single-account $SINGLE_ACCOUNT_ID
          artifacts:
            files:
              - ServiceCatalogPuppet/manifest.yaml
              - ServiceCatalogPuppet/manifest-expanded.yaml
              - output/*/*
              - results/*/*
              - tasks.log
            name: Deploy
      TimeoutInMinutes: 480
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"
  {% endif %}

  CloudFormationEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: servicecatalog-puppet-cloudformation-events
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

  CloudFormationEventsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: AllowSNS
        Version: '2012-10-17'
        Statement:
          - Sid: allow-send-message
            Effect: Allow
            Principal: "*"
            Action:
              - sqs:SendMessage
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub "arn:${AWS::Partition}:sns:*:${AWS::AccountId}:servicecatalog-puppet-cloudformation-regional-events"
      Queues:
        - !Ref CloudFormationEventsQueue

  SpokeDeployBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "sc-puppet-spoke-deploy-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

  CachingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "sc-puppet-caching-bucket-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      Tags:
        - Key: "ServiceCatalogPuppet:Actor"
          Value: "Framework"

Outputs:
  CloudFormationEventsQueueArn:
    Value: !GetAtt CloudFormationEventsQueue.Arn
  Version:
    Value: !GetAtt Param.Value
  ManualApprovalsParam:
    Value: !GetAtt ManualApprovalsParam.Value
