service: continuous-runner

frameworkVersion: '2'

provider:
  name: aws
  region: eu-west-1
  profile: default
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  timeout: 900
  tracing:
    lambda: true

resources:
  Resources:
    FailureTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: 'FailureTopic'
        TopicName: FailureTopic
    CodeBuildServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: TestingCodeBuildServiceRole
        Path: /servicecatalog-puppet/
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "codebuild.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - !Sub "arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess"

    HasNoLaunchesProvisioned:
      Type: AWS::CodeBuild::Project
      Properties: &properties
        Name: HasNoLaunchesProvisioned
        Description: "Project to verify HasNoLaunchesProvisioned"
        ServiceRole: !GetAtt CodeBuildServiceRole.Arn
        Artifacts:
          Type: no_artifacts
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:4.0
          EnvironmentVariables:
            - Name: SPOKE_ACCOUNT_ID
              Type: PARAMETER_STORE
              Value: NOT_SET
            - Name: REGION_TO_CHECK
              Type: PLAINTEXT
              Value: NOT_SET
        Source:
          Type: no_source
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - aws sts assume-role --role-arn arn:aws:iam::$SPOKE_ACCOUNT_ID:role/servicecatalog-puppet/PuppetRole --role-session-name OSS > output.json
                  - export AWS_ACCESS_KEY_ID=$(cat output.json | jq -r '.Credentials''.AccessKeyId')
                  - export AWS_SECRET_ACCESS_KEY=$(cat output.json | jq -r '.Credentials''.SecretAccessKey')
                  - export AWS_SESSION_TOKEN=$(cat output.json | jq -r '.Credentials''.SessionToken')
                  - aws sts get-caller-identity
                  - aws servicecatalog --region $REGION_TO_CHECK describe-provisioned-product --name basic-vpc && exit 1 || exit 0
        TimeoutInMinutes: 10


    #  aws servicecatalog describe-portfolio --id=$(aws servicecatalog list-portfolios --query='PortfolioDetails[?DisplayName==`config-base-optional-all01s`].Id' --output text)

    HasALaunchProvisioned:
      Type: AWS::CodeBuild::Project
      Properties:
        <<: *properties
        Name: HasALaunchProvisioned
        Description: "Project to verify HasALaunchProvisioned"
        Source:
          Type: no_source
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - aws sts assume-role --role-arn arn:aws:iam::$SPOKE_ACCOUNT_ID:role/servicecatalog-puppet/PuppetRole --role-session-name OSS > output.json
                  - export AWS_ACCESS_KEY_ID=$(cat output.json | jq -r '.Credentials''.AccessKeyId')
                  - export AWS_SECRET_ACCESS_KEY=$(cat output.json | jq -r '.Credentials''.SecretAccessKey')
                  - export AWS_SESSION_TOKEN=$(cat output.json | jq -r '.Credentials''.SessionToken')
                  - aws sts get-caller-identity
                  - aws servicecatalog --region $REGION_TO_CHECK describe-provisioned-product --name basic-vpc && exit 0 || exit 1

    HasNoSpokeLocalShared:
      Type: AWS::CodeBuild::Project
      Properties:
        <<: *properties
        Name: HasNoSpokeLocalShared
        Description: "Project to verify HasNoSpokeLocalShared"
        Source:
          Type: no_source
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - aws sts assume-role --role-arn arn:aws:iam::$SPOKE_ACCOUNT_ID:role/servicecatalog-puppet/PuppetRole --role-session-name OSS > output.json
                  - export AWS_ACCESS_KEY_ID=$(cat output.json | jq -r '.Credentials''.AccessKeyId')
                  - export AWS_SECRET_ACCESS_KEY=$(cat output.json | jq -r '.Credentials''.SecretAccessKey')
                  - export AWS_SESSION_TOKEN=$(cat output.json | jq -r '.Credentials''.SessionToken')
                  - aws sts get-caller-identity
                  - aws servicecatalog --region $REGION_TO_CHECK describe-portfolio --id=$(aws servicecatalog list-portfolios --query='PortfolioDetails[?DisplayName==`config-base-optional-all01`].Id' --output text) && exit 1 || exit 0

    HasASpokeLocalShared:
      Type: AWS::CodeBuild::Project
      Properties:
        <<: *properties
        Name: HasASpokeLocalShared
        Description: "Project to verify HasASpokeLocalShared"
        Source:
          Type: no_source
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - aws sts assume-role --role-arn arn:aws:iam::$SPOKE_ACCOUNT_ID:role/servicecatalog-puppet/PuppetRole --role-session-name OSS > output.json
                  - export AWS_ACCESS_KEY_ID=$(cat output.json | jq -r '.Credentials''.AccessKeyId')
                  - export AWS_SECRET_ACCESS_KEY=$(cat output.json | jq -r '.Credentials''.SecretAccessKey')
                  - export AWS_SESSION_TOKEN=$(cat output.json | jq -r '.Credentials''.SessionToken')
                  - aws sts get-caller-identity
                  - aws servicecatalog --region $REGION_TO_CHECK describe-portfolio --id=$(aws servicecatalog list-portfolios --query='PortfolioDetails[?DisplayName==`config-base-optional-all01`].Id' --output text) && exit 0 || exit 1


functions:
  setup-deploy-to:
    handler: setup_deploy_to.handler
  has-deployed-to:
    handler: has_deployed_to.handler

stepFunctions:
  stateMachines:
    continousRunner:
      name: ContinousRunner
      definition:
        Comment: "Runs service catalog puppet on a loop"
        StartAt: VerifyEnvironmentIsClean
        States:
          VerifyEnvironmentIsClean:
            Type: "Parallel"
            Catch:
              - ErrorEquals: [ "States.ALL" ]
                Next: SetupTerminated
            Branches:
              - StartAt: HasNoLaunchesProvisioned
                States:
                  HasNoLaunchesProvisioned:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasNoLaunchesProvisioned
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value: /SCT/e2e-testing/account-in-ou-ten/account-id
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value: eu-west-1
                    End: true
              - StartAt: HasNoSpokeLocalShared
                States:
                  HasNoSpokeLocalShared:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasNoSpokeLocalShared
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value: /SCT/e2e-testing/account-in-ou-ten/account-id
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value: eu-west-1
                    End: true
            OutputPath: null
            Next: SetupDeployToTenSingleRegion

          SetupDeployToTenSingleRegion:
            Type: Pass
            Parameters:
              Payload:
                Scenario: "ten-accounts-one-region"
                AccountToCheck: "/SCT/e2e-testing/account-in-ou-ten/account-id"
                RegionToCheck: "eu-west-1"
            Next: SetupDeployTo

          SetupDeployToTenAllRegions:
            Type: Pass
            Parameters:
              Payload:
                Scenario: "ten-accounts-all-regions"
                AccountToCheck: "/SCT/e2e-testing/account-in-ou-ten/account-id"
                RegionToCheck: "eu-west-1" # TODO change to eu-west-2 when the port is setup there!
            Next: SetupDeployTo

          SetupTerminated:
            Type: Pass
            Parameters:
              Payload:
                Scenario: "terminated"
                AccountToCheck: "/SCT/e2e-testing/account-in-ou-ten/account-id"
                RegionToCheck: "eu-west-1"
            Next: SetupDeployTo

          SetupDeployTo:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName:
                Ref: setup-deploy-to
              Payload:
                Scenario.$: "$.Payload.Scenario"
                AccountToCheck.$: "$.Payload.AccountToCheck"
                RegionToCheck.$: "$.Payload.RegionToCheck"
            Catch:
              - ErrorEquals: [ "States.ALL" ]
                Next: SetupTerminated
            OutputPath: "$.Payload"
            Next: WaitForDeployTo

          WaitForDeployTo:
            Type: Wait
            Seconds: 5
            Next: HasDeployToCompleted

          HasDeployToCompleted:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName:
                Ref: has-deployed-to
              Payload:
                Scenario.$: "$.Scenario"
                newCommitHash.$: "$.newCommitHash"
                codepipelineExecutionId.$: "$.codepipelineExecutionId"
                AccountToCheck.$: "$.AccountToCheck"
                RegionToCheck.$: "$.RegionToCheck"
            OutputPath: "$.Payload"
            Catch:
              - ErrorEquals: [ "States.ALL" ]
                Next: SetupTerminated
            Next: CheckDeployToCompleted

          CheckDeployToCompleted:
            Type: Choice
            Choices:
              - Variable: "$.currentStatus"
                StringEquals: "Cancelled"
                Next: DeployToFailed
              - Variable: "$.currentStatus"
                StringEquals: "InProgress"
                Next: WaitForDeployTo
              - Variable: "$.currentStatus"
                StringEquals: "Stopped"
                Next: DeployToFailed
              - Variable: "$.currentStatus"
                StringEquals: "Stopping"
                Next: WaitForDeployTo
              - Variable: "$.currentStatus"
                StringEquals: "Succeeded"
                Next: DeployToCompleted
              - Variable: "$.currentStatus"
                StringEquals: "Superseded"
                Next: DeployToFailed
              - Variable: "$.currentStatus"
                StringEquals: "Failed"
                Next: DeployToFailed
            Default: WaitForDeployTo

          DeployToFailed:
            Type: Pass
            Next: SetupTerminated

          DeployToCompleted:
            Type: Choice
            Choices:
              - Variable: "$.Scenario"
                StringEquals: "terminated"
                Next: VerifyCleanEnvironment
            Default: VerifyTenAccountsSingleRegionWorked

          VerifyTenAccountsSingleRegionWorked:
            Type: "Parallel"
            Catch:
              - ErrorEquals: [ "States.ALL" ]
                Next: SetupTerminated
            Branches:
              - StartAt: HasALaunchProvisioned
                States:
                  HasALaunchProvisioned:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasALaunchProvisioned
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value.$: $.AccountToCheck
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value.$: $.RegionToCheck
                    End: true
              - StartAt: HasASpokeLocalShared
                States:
                  HasASpokeLocalShared:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasASpokeLocalShared
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value.$: $.AccountToCheck
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value.$: $.RegionToCheck
                    End: true
            ResultPath: null
            Next: "NextTest"

          NextTest:
            Type: Choice
            Choices:
              - Variable: "$.Scenario"
                StringEquals: "ten-accounts-one-region"
                Next: SetupDeployToTenAllRegions
              - Variable: "$.Scenario"
                StringEquals: "ten-accounts-all-regions"
                Next: SetupTerminated
            Default: SetupTerminated

          VerifyCleanEnvironment:
            Type: "Parallel"
            Branches:
              - StartAt: HasNoLaunchesProvisioned2
                States:
                  HasNoLaunchesProvisioned2:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasNoLaunchesProvisioned
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value: /SCT/e2e-testing/account-in-ou-ten/account-id
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value: eu-west-1
                    End: true
              - StartAt: HasNoSpokeLocalShared2
                States:
                  HasNoSpokeLocalShared2:
                    Type: Task
                    Resource: "arn:aws:states:::codebuild:startBuild.sync"
                    Parameters:
                      ProjectName: HasNoSpokeLocalShared
                      EnvironmentVariablesOverride:
                        - Name: SPOKE_ACCOUNT_ID
                          Type: PARAMETER_STORE
                          Value: /SCT/e2e-testing/account-in-ou-ten/account-id
                        - Name: REGION_TO_CHECK
                          Type: PLAINTEXT
                          Value: eu-west-1
                    End: true
            End: true


plugins:
  - serverless-step-functions
